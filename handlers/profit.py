from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from states.profit import ProfitCalculation
from keyboards.reply import get_main_keyboard
from utils.calculations import calculate_amount_after_fee

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ FunPay. —è –º–æ–≥—É —Ä–∞—Å—á–∏—Ç–∞—Ç—å —á–∏—Å—Ç—É—é –ø—Ä–∏–±—ã–ª—å —Å –∑–∞–∫–∞–∑–∞, –∞ —Ç–∞–∫ –∂–µ —É–º–µ—é –ø–∞—Ä—Å–∏—Ç—å —Ü–µ–Ω—ã –≤ Google Play.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_keyboard()
    )

@router.message(F.text == "üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —á–∏—Å—Ç—É—é –ø—Ä–∏–±—ã–ª—å")
async def start_calculation(message: types.Message, state: FSMContext):
    await state.set_state(ProfitCalculation.waiting_for_initial_amount)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—É—é —Å—É–º–º—É ($):")

@router.message(ProfitCalculation.waiting_for_initial_amount)
async def process_initial_amount(message: types.Message, state: FSMContext):
    try:
        initial_amount = float(message.text)
        await state.update_data(initial_amount=initial_amount)
        await state.set_state(ProfitCalculation.waiting_for_amount_paid)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ ($):")
    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@router.message(ProfitCalculation.waiting_for_amount_paid)
async def process_amount_paid(message: types.Message, state: FSMContext):
    try:
        amount_paid = float(message.text)
        data = await state.get_data()
        initial_amount = data['initial_amount']

        withdrawal_fee_percentage = 6
        withdrawal_fee_fixed = 0

        amount_after_fee = calculate_amount_after_fee(
            initial_amount, withdrawal_fee_percentage, withdrawal_fee_fixed)
        net_profit = amount_paid - amount_after_fee

        response = (
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:\n"
            f"‚Ä¢ –ò—Å—Ö–æ–¥–Ω–∞—è —Å—É–º–º–∞: ${initial_amount:.2f}\n"
            f"‚Ä¢ –°—É–º–º–∞ –ø–æ—Å–ª–µ –∫–æ–º–∏—Å—Å–∏–∏: ${amount_after_fee:.2f}\n"
            f"‚Ä¢ –í—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏: ${amount_paid:.2f}\n"
            f"‚Ä¢ –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: ${net_profit:.2f}"
        )

        await message.answer(response)
        await state.clear()
    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
